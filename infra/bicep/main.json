{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.34.44.8038",
      "templateHash": "10110036665935935732"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "defaultValue": "dev",
      "metadata": {
        "description": "The environment name. Default: dev"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The Azure region for deploying resources"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "environment": "[parameters('environmentName')]",
        "application": "arrow-tracker",
        "provisioner": "bicep"
      },
      "metadata": {
        "description": "Tags to apply to all resources"
      }
    },
    "uniqueSuffix": {
      "type": "string",
      "defaultValue": "[uniqueString(resourceGroup().id)]",
      "metadata": {
        "description": "Unique suffix for resource names"
      }
    },
    "b2cTenantName": {
      "type": "string",
      "metadata": {
        "description": "B2C tenant name (without .onmicrosoft.com)"
      }
    },
    "cosmosDbFreeTier": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Whether to enable free tier for Cosmos DB (one per subscription)"
      }
    }
  },
  "variables": {
    "baseName": "[format('arrowtrack-{0}', parameters('environmentName'))]",
    "functionAppName": "[format('{0}-func-{1}', variables('baseName'), parameters('uniqueSuffix'))]",
    "appServicePlanName": "[format('{0}-plan-{1}', variables('baseName'), parameters('uniqueSuffix'))]",
    "storagePrefix": "[take(replace(format('arrowtrack{0}', parameters('environmentName')), '-', ''), 14)]",
    "storageAccountName": "[format('{0}st{1}', variables('storagePrefix'), take(parameters('uniqueSuffix'), 8))]",
    "cosmosDbAccountName": "[format('{0}-cosmos-{1}', variables('baseName'), parameters('uniqueSuffix'))]",
    "keyVaultName": "[format('{0}-kv-{1}', variables('baseName'), parameters('uniqueSuffix'))]",
    "b2cAppDisplayName": "[format('Arrow Tracker - {0}', parameters('environmentName'))]",
    "b2cClientIdSecretName": "[format('{0}/B2C-CLIENT-ID', variables('keyVaultName'))]",
    "b2cTenantSecretName": "[format('{0}/B2C-TENANT-NAME', variables('keyVaultName'))]",
    "b2cTenantUrlSecretName": "[format('{0}/B2C-TENANT-URL', variables('keyVaultName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-02-01",
      "name": "[variables('b2cClientIdSecretName')]",
      "properties": {
        "value": "[reference(resourceId('Microsoft.Resources/deployments', 'azureAdB2cDeployment'), '2022-09-01').outputs.appId.value]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'azureAdB2cDeployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'keyVaultUpdateDeployment')]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-02-01",
      "name": "[variables('b2cTenantSecretName')]",
      "properties": {
        "value": "[reference(resourceId('Microsoft.Resources/deployments', 'azureAdB2cDeployment'), '2022-09-01').outputs.tenantName.value]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'azureAdB2cDeployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'keyVaultUpdateDeployment')]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-02-01",
      "name": "[variables('b2cTenantUrlSecretName')]",
      "properties": {
        "value": "[reference(resourceId('Microsoft.Resources/deployments', 'azureAdB2cDeployment'), '2022-09-01').outputs.b2cTenantUrl.value]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'azureAdB2cDeployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'keyVaultUpdateDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "storageAccountDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('storageAccountName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.34.44.8038",
              "templateHash": "549791115360857000"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the storage account"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The Azure region for the storage account"
              }
            },
            "tags": {
              "type": "object",
              "metadata": {
                "description": "Tags to apply to the storage account"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-09-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                  "services": {
                    "blob": {
                      "enabled": true
                    },
                    "file": {
                      "enabled": true
                    },
                    "queue": {
                      "enabled": true
                    },
                    "table": {
                      "enabled": true
                    }
                  },
                  "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot",
                "minimumTlsVersion": "TLS1_2"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('name'), 'default')]",
              "properties": {
                "deleteRetentionPolicy": {
                  "enabled": true,
                  "days": 7
                },
                "containerDeleteRetentionPolicy": {
                  "enabled": true,
                  "days": 7
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "key": {
              "type": "string",
              "metadata": {
                "description": "Storage account key - note: this is sensitive data but @secure cannot be used with outputs"
              },
              "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2022-09-01').keys[0].value]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "appServicePlanDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('appServicePlanName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.34.44.8038",
              "templateHash": "12134241836610252812"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the App Service Plan"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The Azure region for the App Service Plan"
              }
            },
            "tags": {
              "type": "object",
              "metadata": {
                "description": "Tags to apply to the App Service Plan"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-03-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "B1",
                "tier": "Basic"
              },
              "properties": {
                "reserved": true
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/serverfarms', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyVaultDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('keyVaultName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.34.44.8038",
              "templateHash": "14567685414923254963"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the Key Vault"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The Azure region for the Key Vault"
              }
            },
            "tags": {
              "type": "object",
              "metadata": {
                "description": "Tags to apply to the Key Vault"
              }
            },
            "functionAppPrincipalId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The principal ID of the function app that will access Key Vault (optional)"
              }
            },
            "keyVaultName": {
              "type": "string",
              "defaultValue": "[format('kv-{0}', uniqueString(resourceGroup().id))]"
            }
          },
          "variables": {
            "shortVaultName": "[if(greater(length(parameters('keyVaultName')), 24), substring(parameters('keyVaultName'), 0, 24), parameters('keyVaultName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2023-02-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": true,
                "enableRbacAuthorization": true,
                "softDeleteRetentionInDays": 7
              }
            },
            {
              "condition": "[not(empty(parameters('functionAppPrincipalId')))]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('name'))]",
              "name": "[guid(resourceId('Microsoft.KeyVault/vaults', parameters('name')), parameters('functionAppPrincipalId'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6'))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
                "principalId": "[parameters('functionAppPrincipalId')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "uri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('name')), '2023-02-01').vaultUri]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "functionAppDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('functionAppName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "appServicePlanId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appServicePlanDeployment'), '2022-09-01').outputs.id.value]"
          },
          "storageAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storageAccountDeployment'), '2022-09-01').outputs.name.value]"
          },
          "storageAccountKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storageAccountDeployment'), '2022-09-01').outputs.key.value]"
          },
          "keyVaultName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyVaultDeployment'), '2022-09-01').outputs.name.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.34.44.8038",
              "templateHash": "18421935979259118287"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the Function App"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The Azure region for the Function App"
              }
            },
            "tags": {
              "type": "object",
              "metadata": {
                "description": "Tags to apply to the Function App"
              }
            },
            "appServicePlanId": {
              "type": "string",
              "metadata": {
                "description": "The ID of the App Service Plan to use"
              }
            },
            "storageAccountName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Storage Account to use"
              }
            },
            "storageAccountKey": {
              "type": "securestring",
              "metadata": {
                "description": "The key for the Storage Account"
              }
            },
            "keyVaultName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The name of the Key Vault to use for secrets (optional)"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-03-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "functionapp,linux",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "serverFarmId": "[parameters('appServicePlanId')]",
                "siteConfig": {
                  "linuxFxVersion": "Node|18",
                  "ftpsState": "Disabled",
                  "minTlsVersion": "1.2",
                  "http20Enabled": true,
                  "appSettings": "[concat(createArray(createObject('name', 'AzureWebJobsStorage', 'value', format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', parameters('storageAccountName'), parameters('storageAccountKey'), environment().suffixes.storage)), createObject('name', 'FUNCTIONS_EXTENSION_VERSION', 'value', '~4'), createObject('name', 'FUNCTIONS_WORKER_RUNTIME', 'value', 'node'), createObject('name', 'WEBSITE_NODE_DEFAULT_VERSION', 'value', '~18'), createObject('name', 'WEBSITE_CONTENTAZUREFILECONNECTIONSTRING', 'value', format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', parameters('storageAccountName'), parameters('storageAccountKey'), environment().suffixes.storage)), createObject('name', 'WEBSITE_CONTENTSHARE', 'value', toLower(parameters('name'))), createObject('name', 'NODE_ENV', 'value', 'development')), if(not(empty(parameters('keyVaultName'))), createArray(createObject('name', 'KEY_VAULT_URI', 'value', format('https://{0}{1}', parameters('keyVaultName'), environment().suffixes.keyvaultDns))), createArray()))]",
                  "cors": {
                    "allowedOrigins": [
                      "http://localhost:3000",
                      "https://localhost:3000"
                    ],
                    "supportCredentials": true
                  }
                },
                "httpsOnly": true
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/sites', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "url": {
              "type": "string",
              "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', parameters('name')), '2022-03-01').defaultHostName)]"
            },
            "principalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('name')), '2022-03-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'appServicePlanDeployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'keyVaultDeployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'storageAccountDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyVaultUpdateDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('keyVaultName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "functionAppPrincipalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'functionAppDeployment'), '2022-09-01').outputs.principalId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.34.44.8038",
              "templateHash": "14567685414923254963"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the Key Vault"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The Azure region for the Key Vault"
              }
            },
            "tags": {
              "type": "object",
              "metadata": {
                "description": "Tags to apply to the Key Vault"
              }
            },
            "functionAppPrincipalId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The principal ID of the function app that will access Key Vault (optional)"
              }
            },
            "keyVaultName": {
              "type": "string",
              "defaultValue": "[format('kv-{0}', uniqueString(resourceGroup().id))]"
            }
          },
          "variables": {
            "shortVaultName": "[if(greater(length(parameters('keyVaultName')), 24), substring(parameters('keyVaultName'), 0, 24), parameters('keyVaultName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2023-02-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": true,
                "enableRbacAuthorization": true,
                "softDeleteRetentionInDays": 7
              }
            },
            {
              "condition": "[not(empty(parameters('functionAppPrincipalId')))]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('name'))]",
              "name": "[guid(resourceId('Microsoft.KeyVault/vaults', parameters('name')), parameters('functionAppPrincipalId'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6'))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
                "principalId": "[parameters('functionAppPrincipalId')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "uri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('name')), '2023-02-01').vaultUri]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'functionAppDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "cosmosDbDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('cosmosDbAccountName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "enableFreeTier": {
            "value": "[parameters('cosmosDbFreeTier')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.34.44.8038",
              "templateHash": "290167759814729313"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the Cosmos DB account"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The Azure region for the Cosmos DB account"
              }
            },
            "tags": {
              "type": "object",
              "metadata": {
                "description": "Tags to apply to the Cosmos DB account"
              }
            },
            "enableFreeTier": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Whether to use free tier for this Cosmos DB account (limit: one per subscription)"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.DocumentDB/databaseAccounts",
              "apiVersion": "2023-04-15",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "GlobalDocumentDB",
              "properties": {
                "enableFreeTier": "[parameters('enableFreeTier')]",
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                  "defaultConsistencyLevel": "Session"
                },
                "locations": [
                  {
                    "locationName": "[parameters('location')]",
                    "failoverPriority": 0,
                    "isZoneRedundant": false
                  }
                ],
                "capabilities": [
                  {
                    "name": "EnableServerless"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
              "apiVersion": "2023-04-15",
              "name": "[format('{0}/{1}', parameters('name'), 'ArrowTrackerDB')]",
              "properties": {
                "resource": {
                  "id": "ArrowTrackerDB"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2023-04-15",
              "name": "[format('{0}/{1}/{2}', parameters('name'), 'ArrowTrackerDB', 'Users')]",
              "properties": {
                "resource": {
                  "id": "Users",
                  "partitionKey": {
                    "paths": [
                      "/userId"
                    ],
                    "kind": "Hash"
                  },
                  "indexingPolicy": {
                    "indexingMode": "consistent",
                    "includedPaths": [
                      {
                        "path": "/*"
                      }
                    ]
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('name'), 'ArrowTrackerDB')]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2023-04-15",
              "name": "[format('{0}/{1}/{2}', parameters('name'), 'ArrowTrackerDB', 'PracticeSessions')]",
              "properties": {
                "resource": {
                  "id": "PracticeSessions",
                  "partitionKey": {
                    "paths": [
                      "/userId"
                    ],
                    "kind": "Hash"
                  },
                  "indexingPolicy": {
                    "indexingMode": "consistent",
                    "includedPaths": [
                      {
                        "path": "/*"
                      }
                    ]
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('name'), 'ArrowTrackerDB')]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2023-04-15",
              "name": "[format('{0}/{1}/{2}', parameters('name'), 'ArrowTrackerDB', 'Equipment')]",
              "properties": {
                "resource": {
                  "id": "Equipment",
                  "partitionKey": {
                    "paths": [
                      "/userId"
                    ],
                    "kind": "Hash"
                  },
                  "indexingPolicy": {
                    "indexingMode": "consistent",
                    "includedPaths": [
                      {
                        "path": "/*"
                      }
                    ]
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('name'), 'ArrowTrackerDB')]"
              ]
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "connectionString": {
              "type": "string",
              "metadata": {
                "description": "Cosmos DB connection string - note: this is sensitive data but @secure cannot be used with outputs"
              },
              "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('name')), '2023-04-15').connectionStrings[0].connectionString]"
            },
            "databaseName": {
              "type": "string",
              "value": "ArrowTrackerDB"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "azureAdB2cDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "tenantName": {
            "value": "[parameters('b2cTenantName')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "applicationDisplayName": {
            "value": "[variables('b2cAppDisplayName')]"
          },
          "replyUrls": {
            "value": [
              "http://localhost:3000",
              "https://localhost:3000",
              "[reference(resourceId('Microsoft.Resources/deployments', 'functionAppDeployment'), '2022-09-01').outputs.url.value]"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.34.44.8038",
              "templateHash": "9343014627371118101"
            }
          },
          "parameters": {
            "tenantName": {
              "type": "string",
              "metadata": {
                "description": "The name of the B2C tenant (without .onmicrosoft.com)"
              }
            },
            "applicationDisplayName": {
              "type": "string",
              "defaultValue": "Arrow Tracker",
              "metadata": {
                "description": "The display name for the B2C application"
              }
            },
            "replyUrls": {
              "type": "array",
              "defaultValue": [
                "http://localhost:3000",
                "https://localhost:3000"
              ],
              "metadata": {
                "description": "The reply URLs for the B2C application (where users will be redirected after authentication)"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags to apply to B2C resources"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.AzureActiveDirectory/b2cDirectories/applications",
              "apiVersion": "2023-01-01-preview",
              "name": "[format('{0}/{1}', parameters('tenantName'), parameters('applicationDisplayName'))]",
              "properties": {
                "displayName": "[parameters('applicationDisplayName')]",
                "identifierUris": [
                  "[format('https://{0}.onmicrosoft.com/{1}', parameters('tenantName'), parameters('applicationDisplayName'))]"
                ],
                "replyUrls": "[parameters('replyUrls')]",
                "requiredResourceAccess": [
                  {
                    "resourceAppId": "00000003-0000-0000-c000-000000000000",
                    "resourceAccess": [
                      {
                        "id": "e1fe6dd8-ba31-4d61-89e7-88639da4683d",
                        "type": "Scope"
                      }
                    ]
                  }
                ],
                "webApp": {
                  "implicitGrantSettings": {
                    "enableAccessTokenIssuance": true,
                    "enableIdTokenIssuance": true
                  }
                },
                "tags": "[coalesce(tryGet(parameters('tags'), 'applicationTags'), createArray())]"
              }
            },
            {
              "type": "Microsoft.AzureActiveDirectory/b2cDirectories/applications/servicePrincipals",
              "apiVersion": "2023-01-01-preview",
              "name": "[format('{0}/{1}/{2}', split(format('{0}/{1}', parameters('tenantName'), parameters('applicationDisplayName')), '/')[0], split(format('{0}/{1}', parameters('tenantName'), parameters('applicationDisplayName')), '/')[1], format('sp-{0}', parameters('applicationDisplayName')))]",
              "properties": {
                "accountEnabled": true,
                "appId": "[reference(resourceId('Microsoft.AzureActiveDirectory/b2cDirectories/applications', split(format('{0}/{1}', parameters('tenantName'), parameters('applicationDisplayName')), '/')[0], split(format('{0}/{1}', parameters('tenantName'), parameters('applicationDisplayName')), '/')[1]), '2023-01-01-preview').appId]",
                "displayName": "[parameters('applicationDisplayName')]",
                "tags": "[coalesce(tryGet(parameters('tags'), 'servicePrincipalTags'), createArray())]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.AzureActiveDirectory/b2cDirectories/applications', split(format('{0}/{1}', parameters('tenantName'), parameters('applicationDisplayName')), '/')[0], split(format('{0}/{1}', parameters('tenantName'), parameters('applicationDisplayName')), '/')[1])]"
              ]
            }
          ],
          "outputs": {
            "appId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.AzureActiveDirectory/b2cDirectories/applications', split(format('{0}/{1}', parameters('tenantName'), parameters('applicationDisplayName')), '/')[0], split(format('{0}/{1}', parameters('tenantName'), parameters('applicationDisplayName')), '/')[1]), '2023-01-01-preview').appId]"
            },
            "applicationName": {
              "type": "string",
              "value": "[parameters('applicationDisplayName')]"
            },
            "tenantName": {
              "type": "string",
              "value": "[parameters('tenantName')]"
            },
            "b2cTenantUrl": {
              "type": "string",
              "value": "[format('https://{0}.b2clogin.com/{1}.onmicrosoft.com', parameters('tenantName'), parameters('tenantName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'functionAppDeployment')]"
      ]
    }
  ],
  "outputs": {
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]"
    },
    "functionAppName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'functionAppDeployment'), '2022-09-01').outputs.name.value]"
    },
    "functionAppUrl": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'functionAppDeployment'), '2022-09-01').outputs.url.value]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storageAccountDeployment'), '2022-09-01').outputs.name.value]"
    },
    "cosmosDbAccountName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmosDbDeployment'), '2022-09-01').outputs.name.value]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyVaultDeployment'), '2022-09-01').outputs.name.value]"
    },
    "b2cTenantName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'azureAdB2cDeployment'), '2022-09-01').outputs.tenantName.value]"
    },
    "b2cAppId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'azureAdB2cDeployment'), '2022-09-01').outputs.appId.value]"
    }
  }
}