name: Arrow Tracker Client CI/CD

on:
  push:
    branches: [main]
    paths:
      - "client/**"
  pull_request:
    branches: [main]
    paths:
      - "client/**"
  workflow_dispatch:

jobs:
  test:
    name: Test Client Application
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./client/arrow-tracker

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "./client/arrow-tracker/package-lock.json"

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run tests
        run: npm test -- --watchAll=false

  build:
    name: Build Client Application
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    defaults:
      run:
        working-directory: ./client/arrow-tracker

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "./client/arrow-tracker/package-lock.json"

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Build application
        run: npm run build
        env:
          REACT_APP_API_BASE_URL: ${{ secrets.REACT_APP_API_BASE_URL }}
          REACT_APP_AZURE_CLIENT_ID: ${{ secrets.REACT_APP_AZURE_CLIENT_ID }}
          REACT_APP_AZURE_B2C_TENANT_NAME: ${{ secrets.REACT_APP_AZURE_B2C_TENANT_NAME }}
          REACT_APP_AZURE_B2C_POLICY_NAME: ${{ secrets.REACT_APP_AZURE_B2C_POLICY_NAME }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: ./client/arrow-tracker/build
          retention-days: 7

  deploy:
    name: Deploy to Azure Static Web Apps
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    environment: production

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build

      - name: Deploy to Azure Static Web Apps
        id: deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "/build"
          api_location: ""
          output_location: ""
          skip_app_build: true

      - name: Log deployment URL
        run: echo "Deployed to ${{ steps.deploy.outputs.static_web_app_url }}"
